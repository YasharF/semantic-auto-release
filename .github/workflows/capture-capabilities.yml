name: Capture Capability Scenario

on:
  workflow_dispatch:
    inputs:
      scenario:
        description: "Scenario to capture (classic | rules | automerge)"
        required: true
        default: classic
      checks:
        description: "Comma-separated status check contexts (e.g. build,test)"
        required: false
        default: build,test
      approvals:
        description: "Required approving reviews (integer)"
        required: false
        default: "2"
      visibility:
        description: "Optional visibility override (public|private) when scenario=classic"
        required: false
        default: public
      commit-fixtures:
        description: "If true, commit fixture directory into test/fixtures/scenarios/<scenario>_real"
        required: false
        default: "true"

permissions:
  contents: write
  pull-requests: write

jobs:
  capture:
    runs-on: ubuntu-latest
    env:
      SAR_REPO: ${{ github.repository }}
      NODE_AUTH_TOKEN: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Ensure admin token presence
        id: admin_token
        run: |
          if [ -n "${{ secrets.PAT_ADMIN }}" ]; then
            echo "token_ok=true" >> $GITHUB_OUTPUT
          else
            echo "::error::Missing PAT_ADMIN secret (admin PAT required for repo mutation).";
            exit 1;
          fi

      - name: Run scenario mutation + capture
        env:
          PAT_ADMIN: ${{ secrets.PAT_ADMIN }}
          ACTION: capture-scenario
          SCENARIO: ${{ inputs.scenario }}
          CHECKS: ${{ inputs.checks }}
          APPROVALS: ${{ inputs.approvals }}
          OUTPUT: __capture_tmp__
        run: |
          set -euo pipefail
          echo "Running scenario: $SCENARIO"
          # Optional visibility toggle when classic scenario
          if [ "$SCENARIO" = "classic" ] && [ -n "${{ inputs.visibility }}" ]; then
            VISIBILITY=${{ inputs.visibility }} ACTION=set-visibility node scripts/repo-admin.js || echo "Visibility attempt completed"
          fi
          node scripts/repo-admin.js
          ls -al __capture_tmp__

      - name: Promote capture to fixtures directory
        if: ${{ inputs['commit-fixtures'] == 'true' }}
        run: |
          set -euo pipefail
          target="test/fixtures/scenarios/${{ inputs.scenario }}_real"
          rm -rf "$target"
          mv __capture_tmp__ "$target"
          echo "Promoted capture to $target"
          ls -1 "$target"

      - name: Create PR with updated fixtures
        if: ${{ inputs['commit-fixtures'] == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "test(fixtures): update capability scenario ${{ inputs.scenario }} real capture"
          branch: chore/update-fixtures-${{ inputs.scenario }}
          title: "Update capability fixtures (${{ inputs.scenario }})"
          body: |
            Automated capture for scenario '${{ inputs.scenario }}'.
            - Status checks: ${{ inputs.checks }}
            - Approvals: ${{ inputs.approvals }}
            - Visibility override: ${{ inputs.visibility }}
            Generated by workflow run: ${{ github.run_id }}.
          labels: fixtures,automation
          add-paths: |
            test/fixtures/scenarios/${{ inputs.scenario }}_real/**
          signoff: true

      - name: Archive capture artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: capability-capture-${{ inputs.scenario }}
          path: __capture_tmp__
          if-no-files-found: ignore
