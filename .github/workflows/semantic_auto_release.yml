name: "Release Engine"

on:
  workflow_call:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    env:
      HUSKY: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Bump prepare and open PR
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          BASE_BRANCH="main"
          BRANCH="release/bump-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}"

          git checkout -B "${BRANCH}" "origin/${BASE_BRANCH}"
          git push --set-upstream origin "${BRANCH}"

          PHASE="BUMP" npx semantic-release --no-ci --branches "${BRANCH}" --extends ./release.config.js

          VERSION="$(node -p "require('./package.json').version")"

          gh pr create \
            --base "${BASE_BRANCH}" \
            --head "${BRANCH}" \
            --title "chore(release): ${VERSION} [skip ci]" \
            --body "Automated release bump PR for ${VERSION}. This PR updates CHANGES.md and package files."

      - name: Validate bump PR files and author
        if: github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'release/bump-')
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const expectedAuthor = 'github-actions[bot]';
            if (pr.user.login !== expectedAuthor) {
              core.setFailed(`PR author must be ${expectedAuthor}, got ${pr.user.login}`);
              return;
            }
            // File content check will be added later

      - name: Enable auto-merge (squash)
        if: github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'release/bump-') && success()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: gh pr merge --squash --auto ${{ github.event.pull_request.number }}

      - name: Publish release from main
        if: >
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.user.login == 'github-actions[bot]' &&
          startsWith(github.event.pull_request.head.ref, 'release/bump-')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          PHASE="PUBLISH" npx semantic-release --no-ci --branches "main" --extends ./release.config.js

      - name: Delete merged bump branch
        if: >
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.user.login == 'github-actions[bot]' &&
          startsWith(github.event.pull_request.head.ref, 'release/bump-')
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh api -X DELETE "repos/${{ github.repository }}/git/refs/heads/${{ github.event.pull_request.head.ref }}" || true
