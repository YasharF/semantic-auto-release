name: Semantic Auto Release

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  release:
    name: Release (changelog + version bump PR, merge, publish)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    env:
      HUSKY: 0

    steps:
      # 1. Reset staging branch
      - name: Fetch main and staging
        run: |
          git fetch origin main || true
          git fetch origin auto-release-staging || true
          if git show-ref --verify --quiet refs/heads/auto-release-staging; then
            git checkout auto-release-staging
          else
            if git show-ref --verify --quiet refs/remotes/origin/auto-release-staging; then
              git checkout -b auto-release-staging origin/auto-release-staging
            else
              git checkout -b auto-release-staging origin/main
            fi
          fi
          git reset --hard origin/main

      # 2. Calculate release data
      - name: Run semantic-release dry-run with export plugin
        env:
          release_step: create_release_files
          GH_TOKEN: ${{ github.token }}
        run: |
          npx semantic-release --no-ci --dry-run --extends ./release.config.js
          VERSION=$(cat version.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "notes_file=notes.md" >> $GITHUB_OUTPUT
        id: sr

      - name: Stop if no release is due
        if: ${{ !steps.sr.outputs.version }}
        run: exit 0

      # 3. Generate and commit release files
      - name: Write CHANGES.md
        run: node ./scripts/write-changes-md.js "${{ steps.sr.outputs.version }}" "${{ steps.sr.outputs.notes_file }}"

      - name: Update package.json version
        run: node ./scripts/update-version.js "${{ steps.sr.outputs.version }}"

      - name: Commit release files
        run: |
          git add CHANGES.md package.json package-lock.json 2>/dev/null || git add CHANGES.md package.json
          git commit -m "chore(release): ${{ steps.sr.outputs.version }}" || true

      - name: Push changes to auto-release-staging
        run: git push origin auto-release-staging --force

      - name: Create PR into main
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            --base main \
            --head auto-release-staging \
            --title "chore(release): ${{ steps.sr.outputs.version }}" \
            --body "Automated release PR for version ${{ steps.sr.outputs.version }} (changelog + version bump)."

      # 4. Merge and publish
      - name: Merge PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUMBER=$(gh pr list --head auto-release-staging --base main --state open --json number --jq '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            gh pr merge "$PR_NUMBER" --squash
          fi

      - name: Tag and publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git fetch origin main
          git checkout main
          VERSION=${{ steps.sr.outputs.version }}
          git tag "v$VERSION"
          git push origin "v$VERSION"
          npm publish --access public

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "v${{ steps.sr.outputs.version }}" \
            --title "v${{ steps.sr.outputs.version }}" \
            --notes-file notes.md
